extends default_web_logged-in_layout.pug

block styles
  link(rel="stylesheet", href="/css/outfit-listing.css")
  
block content

  .product-div
    .product-detail-container
      .image-gallery
        .thumbnail-container
          img.thumbnail(src=product.Product_Image_Path, alt=product.Name, onclick='setMainImage(this.src)')
          img.thumbnail(src=product.Product_Image_Path, alt=product.Name, onclick='setMainImage(this.src)')
          img.thumbnail(src=product.Product_Image_Path, alt=product.Name, onclick='setMainImage(this.src)')
        img.main-image#mainImage(src=product.Product_Image_Path, alt=product.Name)
      
      .product-info
        h1= product.Name
        h2= product.Inventory_ID
        .price-container          
          span.current-price Price: FREE
        small.penalty Misuse Penalty £#{product.Price}
        p.description= product.Description

        // New: Seller Rating display.
        - var ratingVal = Math.round(avgRating) || 0
        .star-rating
          each starIndex in [1,2,3,4,5]
            if starIndex <= ratingVal
              span.star(style="color: gold; font-size: 1.5em;") &#9733;
            else
              span.star(style="color: gold; font-size: 1.5em;") &#9734;
        p.rating-info Seller Rating: #{avgRating.toFixed(1)} out of 5 (based on #{totalReviews} reviews)

        .size-options
          span Size:
          each size in product.Size.split(',')
            button.size-option= size

        p Color: #{product.Color}
        p Condition Level: #{product.Condition_Level}/10
        p Availability: #{product.Availability ? 'In Stock' : 'Out of Stock'}
        p Quantity Available: #{product.Quantity}

        // Check if active user is the seller.
        if product.User_ID === activeUser.userID
          p.listed-by-you This item is listed by you and cannot be added to cart or favourites.
          ul
            li.backLink
              a.goback-link(href="/") ← Return to Browse
        else
          .button-container
            li
              a.buttonhere.add-to-cart(href=`/cart/add?inventoryId=${product.Inventory_ID}`, data-id=product.Inventory_ID, data-type="cart") Add to Cart
              span.success-label.hidden(data-id=product.Inventory_ID, data-type="cart") Added to Cart!
              span.success-label.hidden(data-id=product.Inventory_ID, data-type="favourites") Added to Favourites!
            li
              a.buttonhere.add-to-fav(href=`/favourites/add?inventoryId=${product.Inventory_ID}`, data-id=product.Inventory_ID, data-type="favourites") Add to Favourites
            
  script.
    function setMainImage(src) {
      document.getElementById('mainImage').src = src;
    }

  script.
    document.addEventListener('DOMContentLoaded', () => {
      const cartButtons = document.querySelectorAll('.add-to-cart');
      const favButtons = document.querySelectorAll('.add-to-fav');

      function showLabel(btn) {
        const id = btn.dataset.id;
        const type = btn.dataset.type;
        const label = document.querySelector(`.success-label[data-id='${id}'][data-type='${type}']`);

        if (label) {
          label.classList.remove('hidden');
          setTimeout(() => label.classList.add('hidden'), 3000);
        }
      }

      cartButtons.forEach(btn => {
        btn.addEventListener('click', (e) => {
          // e.preventDefault(); // Uncomment if using AJAX
          showLabel(btn);
        });
      });

      favButtons.forEach(btn => {
        btn.addEventListener('click', (e) => {
          // e.preventDefault(); // Uncomment if using AJAX
          showLabel(btn);
        });
      });
    });

    
